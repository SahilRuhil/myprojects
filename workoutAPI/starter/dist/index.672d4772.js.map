{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\nclass workout {\n    date = new Date();\n    Id = (Date.now() + '').slice(-10);\n    constructor(coords, distance, duration) {\n        this.coords = coords;// lat and lng\n        this.distance = distance;// km\n        this.duration = duration;// min\n    }\n    _setDescription() {\n        // prettier-ignore\n        const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n        this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${months[this.date.getMonth()]\n            } ${this.date.getDate()}`;\n    }\n};\nclass running extends workout {\n    type = \"running\";\n    constructor(coords, distance, duration, cadence) {\n        super(coords, distance, duration);\n        this.cadence = cadence;\n        this.calcPace();\n        this._setDescription();\n    }\n    calcPace() {\n        this.pace = this.duration / this.distance;// kn/h\n        return this.pace;\n    }\n}\nclass cycling extends workout {\n    type = \"cycling\";\n    constructor(coords, distance, duration, elevation) {\n        super(coords, distance, duration);\n        this.elevation = elevation;\n        this.calcspeed();\n        this._setDescription();\n    }\n    calcspeed() {\n        this.speed = this.distance / (this.duration / 60);\n        return this.speed;\n    }\n}\n// const run1 = new running([25, 34], 45, 555, 7);\n// const cyc1 = new cycling([23 / 56], 34, 53, 66);\n// console.log(run1, cyc1);\n\n\n// ARITECHTURE OF APPLICATION\nconst form = document.querySelector('.form');\nconst containerWorkouts = document.querySelector('.workouts');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\nclass App {\n    #map;\n    #mapevent;\n    #workouts = [];\n    constructor() {\n        this._getposition();\n        form.addEventListener(\"submit\", this._newWorkout.bind(this));\n        inputType.addEventListener('change', this._toggleElevationfield.bind(this))\n    }\n    _getposition() {\n        if (navigator.geolocation)\n            navigator.geolocation.getCurrentPosition(\n                this._loadmap.bind(this), function () {\n                    alert(\"Could not get your position\");\n                }\n            );\n    }\n    _loadmap(position) {\n        // console.log(position);\n        const { latitude } = position.coords;\n        const { longitude } = position.coords;\n        // console.log(latitude, longitude);\n        // console.log(`https://www.google.com/maps/@28.741526232161608, 76.80597631566049,15z`);\n        const coords = [latitude, longitude];\n        this.#map = L.map('map').setView(coords, 13);\n\n        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(this.#map);\n\n\n        this.#map.on(\"click\", this._showForm.bind(this))\n    }\n    _showForm(mapE) {\n        form.classList.remove('hidden');\n        // cursore distance field pe chalajaega\n        inputDistance.focus();\n        this.#mapevent = mapE;\n    }\n    // hide form and input\n    _hideForm() {\n        //  hide form+remove input fields\n        inputCadence.value = inputDistance.value = inputDuration.value = inputElevation.value = '';\n\n        form.style.display = 'none';\n        form.classList.add(\"hidden\");\n        setTimeout(() => (form.style.display = 'grid'), 1000);\n    }\n    _toggleElevationfield() {\n        // need to change the cadance and elvation as per inputtype\n        inputElevation.closest('.form__row').classList.toggle('form__row--hidden');\n        inputCadence.closest('.form__row').classList.toggle('form__row--hidden');\n    }\n    _newWorkout(e) {\n        (e).preventDefault();\n        const isvalidNum = (...inputs) => inputs.every(inp => Number.isFinite(inp));\n        const ispositive = (...inputs) => inputs.every(inp => inp > 0);\n        // get data from input\n        const type = inputType.value;\n        const distance = +inputDistance.value;\n        const duration = +inputDuration.value;\n        const { lat, lng } = this.#mapevent.latlng;\n        let workout;\n\n        // IF Workout if running create running object\n        if (type === 'running') {\n            const cadance = +inputCadence.value;\n            // check validation positive and numbers\n            if (\n                // !Number.isFinite(distance) ||\n                // !Number.isFinite(duration) ||\n                // !Number.isFinite(cadence) // or we write like this\n                !isvalidNum(distance, duration, cadance) ||\n                !ispositive(distance, duration, cadance)) return alert(\"Invalid Input  of running\");\n            workout = new running([lat, lng], distance, duration, cadance);\n        }\n        // same for cycling create object for cycling and replace it by elvation\n        if (type === \"cycling\") {\n            const elevation = +inputElevation.value;\n            // check validation\n            if (!isvalidNum(distance, duration, elevation)\n                || !ispositive(distance, duration, elevation)) return alert(\"invalid details of cycling\");\n            workout = new cycling([lat, lng], distance, duration, elevation);\n        }\n        // Add new object to workout array\n        this.#workouts.push(workout);\n        console.log(workout);\n        // Render Workout on map as marker\n        this._RenderWorkoutMarker(workout);\n        // hide inputs and form\n        this._hideForm();\n        // Rendering Workout on list \n        this._renderWorkout(workout);\n    }\n    _RenderWorkoutMarker(workout) {\n        L.marker(workout.coords).addTo(this.#map)\n            .bindPopup(\n                L.popup({\n                    maxwidth: 250,\n                    minwidth: 100,\n                    autoClose: false,\n                    closeOnClick: false,\n                    className: `${workout.type}-popup`,\n                })\n            ).setPopupContent(\"workout\")\n            .openPopup();\n    }\n    _renderWorkout(workout) {\n        let html = `\n      <li class=\"workout workout--${workout.type}\" data-id=\"${workout.Id}\">\n        <h2 class=\"workout__title\">${workout.description}</h2>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">${workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'\n            }</span>\n          <span class=\"workout__value\">${workout.distance}</span>\n          <span class=\"workout__unit\">km</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⏱</span>\n          <span class=\"workout__value\">${workout.duration}</span>\n          <span class=\"workout__unit\">min</span>\n        </div>\n    `;\n\n        if (workout.type === 'running')\n            html += `\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⚡️</span>\n          <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\n          <span class=\"workout__unit\">min/km</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">🦶🏼</span>\n          <span class=\"workout__value\">${workout.cadence}</span>\n          <span class=\"workout__unit\">spm</span>\n        </div>\n      </li>\n      `;\n\n        if (workout.type === 'cycling')\n            html += `\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⚡️</span>\n          <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\n          <span class=\"workout__unit\">km/h</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⛰</span>\n          <span class=\"workout__value\">${workout.elevation}</span>\n          <span class=\"workout__unit\">m</span>\n        </div>\n      </li>\n      `;\n\n        form.insertAdjacentHTML('afterend', html);\n    }\n\n}\nconst app = new App();\n\n\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}